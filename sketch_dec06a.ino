#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include "DHT.h"
#include <Servo.h>
#define ServoPort D1 
#include <Arduino_JSON.h>
#include "MQ135.h"
#define SENSOR A0
int sensor_pin = 13;
String Message;
Servo myservo;
const char* ssid = "sireesh_srinidhi"; 
const char* password = "Tippu@2001";  
DHT dht = DHT(1, DHT11, 6);                              
ESP8266WebServer server(80); 
JSONVar readings; 
const char MAIN_page1[] PROGMEM ={0x1F, 0x8B, 0x08, 0x08, 0x1E, 0xB2, 0xB5, 0x61, 0x04, 0x00, 0x31, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x00, 0xCD, 0x58, 0x7B, 0x6F, 0xD3, 0x30, 0x10, 0xFF, 0x1F, 0x89, 0xEF, 0x10, 0x82, 0x80, 0x56, 0x34, 0xAF, 0xBE, 0xD6, 0x75, 0x4B, 0x61, 0x5B, 0x81, 0xB5, 0x50, 0xCA, 0xD6, 0x02, 0x1B, 0x08, 0x21, 0x37, 0x71, 0x13, 0x77, 0x49, 0xEC, 0xD9, 0xEE, 0x6B, 0x55, 0xBF, 0x3B, 0xE7, 0xA4, 0x5D, 0x37, 0x60, 0xBC, 0x11, 0x20, 0xB1, 0xC4, 0xBE, 0x3B, 0xDF, 0xEF, 0xEE, 0x77, 0xB6, 0x2F, 0xDD, 0xBD, 0xD3, 0xEC, 0x1E, 0xF4, 0x4F, 0x5F, 0x3D, 0xD1, 0x42, 0x19, 0x47, 0x8D, 0xDB, 0xB7, 0x76, 0xD5, 0x53, 0x8B, 0x50, 0x12, 0xB8, 0x38, 0x49, 0xC7, 0x18, 0xF9, 0xEA, 0x19, 0x63, 0x89, 0x34, 0x2F, 0x44, 0x5C, 0x60, 0xE9, 0xBE, 0xEE, 0x3F, 0x35, 0x6A, 0x97, 0xB3, 0x09, 0x8A, 0xB1, 0x3B, 0x21, 0x78, 0xCA, 0x28, 0x97, 0x9A, 0x47, 0x13, 0x89, 0x13, 0xE9, 0xEA, 0x53, 0xE2, 0xCB, 0xD0, 0xF5, 0xF1, 0x84, 0x78, 0xD8, 0x48, 0x07, 0x05, 0x8D, 0x24, 0x44, 0x12, 0x14, 0x19, 0xC2, 0x43, 0x11, 0x76, 0x1D, 0xD3, 0xD6, 0xD7, 0xAB, 0x00, 0x00, 0xC9, 0x0C, 0x7C, 0x3E, 0x26, 0x13, 0xF7, 0xC4, 0x78, 0xBD, 0x67, 0x1C, 0xD0, 0x98, 0x21, 0x49, 0x06, 0x11, 0xDE, 0x2C, 0x49, 0xB0, 0x8B, 0xFD, 0x00, 0xA7, 0x46, 0x92, 0xC8, 0x08, 0x37, 0x0E, 0x31, 0x8A, 0x64, 0xA8, 0x75, 0x28, 0x2C, 0x4C, 0x39, 0x49, 0x02, 0xAD, 0x37, 0x17, 0x12, 0xC7, 0xBB, 0x56, 0x2A, 0x57, 0x8A, 0x11, 0x49, 0xCE, 0x34, 0x8E, 0x23, 0x57, 0xC8, 0x79, 0x84, 0x45, 0x88, 0xB1, 0xD4, 0x42, 0x8E, 0x87, 0xAE, 0xF2, 0x28, 0xEA, 0x96, 0x25, 0x24, 0xF2, 0xCE, 0xC0, 0x57, 0x68, 0x0E, 0x28, 0x95, 0x42, 0x72, 0xC4, 0x3C, 0x3F, 0x31, 0x3D, 0x1A, 0x5B, 0x97, 0x13, 0x56, 0xD9, 0x2C, 0x99, 0x8E, 0xE5, 0x09, 0xB1, 0x99, 0x33, 0x63, 0x92, 0x98, 0x30, 0xA3, 0x11, 0x80, 0x17, 0x70, 0x22, 0xE7, 0xAE, 0x08, 0x51, 0xA9, 0x56, 0x36, 0x82, 0xA0, 0x3B, 0x3F, 0xB6, 0xC9, 0xC9, 0xC1, 0xA0, 0x73, 0x34, 0x29, 0x9D, 0x10, 0x16, 0xA3, 0x52, 0xB9, 0xD3, 0x7C, 0xE8, 0x1F, 0x5A, 0xCE, 0xF0, 0x68, 0xAB, 0x56, 0xB6, 0x46, 0x55, 0xEF, 0xD4, 0x22, 0xED, 0xFE, 0xD1, 0xEB, 0x6E, 0xE8, 0xBD, 0xE5, 0x5B, 0xB3, 0xED, 0xF6, 0x84, 0x1E, 0xCF, 0xFA, 0xC5, 0xCE, 0xBB, 0xA9, 0xD3, 0xD7, 0x3C, 0x4E, 0x85, 0x80, 0x78, 0x02, 0x92, 0xB8, 0x28, 0xA1, 0xC9, 0x3C, 0xA6, 0x63, 0xB1, 0x0E, 0x26, 0x43, 0xAF, 0xAF, 0xE1, 0x0F, 0x21, 0x3B, 0xC2, 0x0C, 0x28, 0x0D, 0x22, 0x8C, 0x18, 0x11, 0x0A, 0xB8, 0x02, 0xFA, 0x68, 0x88, 0x62, 0x12, 0xCD, 0xDD, 0xAE, 0x4F, 0x06, 0x18, 0x3F, 0xEC, 0xA1, 0x44, 0xDC, 0xF7, 0x89, 0x60, 0x11, 0x02, 0x9C, 0x53, 0xC4, 0xF4, 0xCF, 0x92, 0xA2, 0x96, 0x4F, 0x47, 0x8D, 0xBB, 0x31, 0x62, 0x8B, 0x10, 0x93, 0x20, 0x94, 0xF5, 0x92, 0x6D, 0xB3, 0xD9, 0x4E, 0x4A, 0x5F, 0xDD, 0xB1, 0xED, 0x7B, 0xCB, 0x01, 0xF5, 0xE7, 0x8B, 0x01, 0x64, 0x2C, 0xE0, 0x74, 0x9C, 0xF8, 0x75, 0x40, 0x84, 0x11, 0x37, 0x02, 0x8E, 0x7C, 0x02, 0x24, 0xE5, 0x9C, 0x52, 0xC5, 0xC7, 0x41, 0xE1, 0xEE, 0xD0, 0xF3, 0x87, 0x35, 0xA4, 0xD9, 0xF0, 0x56, 0xAA, 0x95, 0x6A, 0x8E, 0xA6, 0xAC, 0xF3, 0x4B, 0x53, 0x15, 0x14, 0xE6, 0x57, 0x56, 0x30, 0x3C, 0x1A, 0x51, 0x5E, 0xBF, 0x3B, 0x1C, 0x0E, 0xF1, 0x70, 0xB8, 0x93, 0x8D, 0x56, 0x46, 0x3B, 0x2A, 0x38, 0x23, 0x0B, 0xA4, 0xFE, 0x20, 0x8B, 0x44, 0x53, 0x91, 0x3C, 0x28, 0x78, 0x63, 0x2E, 0xC8, 0x04, 0xEF, 0x44, 0x58, 0x4A, 0xCC, 0x0D, 0xC1, 0x90, 0x07, 0xF4, 0xD7, 0x1D, 0xB3, 0x88, 0xE3, 0xE5, 0xAE, 0x95, 0x46, 0xA2, 0x42, 0xB2, 0xD6, 0x15, 0xAC, 0x80, 0xAB, 0xA7, 0x4F, 0x26, 0x9A, 0x17, 0x21, 0x21, 0x5C, 0x3D, 0xC3, 0xA2, 0x01, 0x6B, 0x3E, 0x9D, 0x1A, 0x22, 0xD6, 0x98, 0x51, 0xD2, 0xE2, 0x81, 0x51, 0x4E, 0x2B, 0x8C, 0xAD, 0xD5, 0x56, 0x59, 0x03, 0x99, 0xC4, 0x33, 0x69, 0x78, 0x38, 0x01, 0x8F, 0xFA, 0x37, 0x6A, 0x8F, 0xA5, 0x8E, 0xC1, 0xD1, 0x75, 0x7F, 0xAA, 0x8E, 0x11, 0xA4, 0x8B, 0x7F, 0x06, 0x83, 0xD3, 0xA9, 0xE6, 0x1B, 0xC3, 0x08, 0xCF, 0xB4, 0xD1, 0x58, 0x48, 0x32, 0x9C, 0x1B, 0x59, 0xC9, 0x5F, 0xFA, 0xFA, 0xCC, 0x00, 0x72, 0x64, 0xA0, 0xB1, 0xA4, 0x0A, 0xAB, 0xF3, 0x85, 0x10, 0x71, 0x7F, 0x13, 0x92, 0xAE, 0xA5, 0x99, 0x70, 0x57, 0x0C, 0x56, 0xCC, 0x0A, 0xC7, 0xF1, 0xCE, 0x8A, 0xDC, 0xA2, 0x0D, 0x83, 0xAB, 0xA1, 0x2A, 0x5B, 0x23, 0xCB, 0x4A, 0xA3, 0x8F, 0x61, 0x03, 0x72, 0x24, 0xC7, 0x1C, 0xAF, 0x22, 0x22, 0x71, 0xA0, 0x09, 0xEE, 0x6D, 0x4A, 0xCF, 0xE7, 0xC0, 0xC0, 0xAA, 0xF4, 0xD2, 0xB2, 0x1B, 0x7B, 0x8F, 0xF0, 0x4C, 0x1D, 0x03, 0xE9, 0x79, 0x70, 0x9F, 0xF8, 0xAE, 0xF3, 0xE6, 0xA8, 0xC7, 0xA7, 0x53, 0x79, 0xFC, 0xFC, 0x75, 0xF5, 0xCC, 0xD8, 0xFA, 0x28, 0xC5, 0x88, 0x57, 0x4F, 0x93, 0x5E, 0x79, 0x10, 0x87, 0xA1, 0xB3, 0x7D, 0xC2, 0xF5, 0xAB, 0xB8, 0x0D, 0x70, 0x61, 0x48, 0xCA, 0x80, 0x88, 0xA2, 0xAE, 0x65, 0x28, 0x5D, 0xA7, 0x02, 0x25, 0xA8, 0x41, 0xAE, 0x5D, 0xB9, 0x81, 0x74, 0x3D, 0xE8, 0xD4, 0x76, 0x4D, 0x30, 0xBB, 0xB6, 0xA2, 0xA2, 0x0C, 0x8C, 0x31, 0x5F, 0xFD, 0x35, 0xA6, 0x88, 0x27, 0x8A, 0xAC, 0xB0, 0x7C, 0x8D, 0x4E, 0x8D, 0x53, 0x48, 0x53, 0xA6, 0x48, 0xFC, 0xD4, 0x55, 0xC3, 0xD6, 0x76, 0xC5, 0x98, 0x35, 0xE8, 0xAE, 0xA5, 0x1E, 0x07, 0x57, 0x88, 0xFD, 0xFC, 0xF9, 0x2F, 0x08, 0xDA, 0x7F, 0xD5, 0xF9, 0x1D, 0x62, 0xA6, 0x08, 0xF7, 0xCF, 0x5F, 0x57, 0xB7, 0xE8, 0xC5, 0x9B, 0xA4, 0xB9, 0x97, 0xF8, 0xED, 0x62, 0xD1, 0x20, 0xC9, 0x4B, 0xA7, 0xFA, 0xEE, 0xA3, 0x6D, 0x60, 0xA3, 0xF3, 0x33, 0xC4, 0x00, 0x94, 0x5F, 0x27, 0x44, 0x8C, 0x3D, 0x0F, 0x0B, 0xF1, 0x1D, 0x42, 0x06, 0x2C, 0x6E, 0xC0, 0xFF, 0xFF, 0x8C, 0x83, 0x5E, 0x4C, 0xCF, 0x7E, 0x6B, 0x7B, 0xEC, 0xCF, 0xFB, 0xD3, 0xE2, 0xA1, 0xF3, 0xF1, 0x69, 0x3B, 0x79, 0x31, 0x6E, 0x1E, 0x76, 0x83, 0xE3, 0xD3, 0x59, 0x7B, 0x62, 0x54, 0xF6, 0xCB, 0x6F, 0xE7, 0x5B, 0x03, 0x66, 0xFF, 0x0C, 0x0B, 0x02, 0xC0, 0xFC, 0xC6, 0xC6, 0xF0, 0xE1, 0xD6, 0x87, 0xD3, 0x30, 0xAC, 0x7C, 0x83, 0x86, 0x95, 0x8F, 0x1F, 0x66, 0xE1, 0x9A, 0x7F, 0x94, 0xDD, 0x5C, 0x56, 0x4C, 0x25, 0xA1, 0x49, 0x43, 0xDB, 0x65, 0xDF, 0xCA, 0xBB, 0xA3, 0xF2, 0xFE, 0xC7, 0x10, 0x77, 0x52, 0x9F, 0xA0, 0x27, 0x24, 0x80, 0x87, 0x00, 0xD0, 0x77, 0xCA, 0x27, 0x9E, 0x1B, 0x15, 0x6D, 0x10, 0x18, 0x91, 0x02, 0xA3, 0x12, 0xAE, 0xA5, 0xB7, 0x15, 0xF6, 0x37, 0xBE, 0x2E, 0xAF, 0x8E, 0xEB, 0xD7, 0x45, 0x56, 0xC7, 0x0A, 0x1D, 0x3F, 0xD3, 0x15, 0x02, 0xEC, 0x05, 0x8D, 0x27, 0x07, 0xCF, 0xB4, 0xE6, 0x5E, 0x7F, 0x6F, 0x95, 0x39, 0x0F, 0x25, 0x13, 0x24, 0x94, 0x30, 0x9E, 0x1F, 0x84, 0x08, 0x90, 0x66, 0xED, 0x52, 0xD9, 0xB6, 0x2F, 0x79, 0x2D, 0xD9, 0x00, 0x33, 0x53, 0xFC, 0xBB, 0x18, 0x1B, 0x2F, 0xBA, 0x07, 0x7B, 0xFD, 0x56, 0xF7, 0x25, 0x80, 0x5B, 0x79, 0x48, 0x91, 0x21, 0xD6, 0xB8, 0x91, 0x62, 0xE1, 0x71, 0xC2, 0x64, 0x63, 0x82, 0xB8, 0xB6, 0x37, 0x41, 0xD1, 0x18, 0x0B, 0xF7, 0xFD, 0x87, 0x9D, 0x2B, 0x43, 0x67, 0x3D, 0xF6, 0x91, 0xC4, 0x3D, 0x89, 0x62, 0xA6, 0x26, 0xA0, 0x7B, 0x6C, 0x29, 0x50, 0xA0, 0x93, 0x1B, 0x8E, 0x13, 0x4F, 0x91, 0x92, 0xCB, 0x2F, 0x02, 0x2C, 0x9B, 0x48, 0xA2, 0x5C, 0x7E, 0x59, 0x80, 0x86, 0xC3, 0xCE, 0xEF, 0xAC, 0x65, 0xDA, 0xA5, 0x64, 0xA1, 0xD6, 0x1A, 0xB8, 0x09, 0x9E, 0x6A, 0x27, 0x9D, 0x17, 0x87, 0xB0, 0xC5, 0x8E, 0xA1, 0x5B, 0x04, 0x3A, 0x73, 0xF9, 0x9D, 0x81, 0x49, 0x13, 0x0E, 0x1B, 0x12, 0xAE, 0x5F, 0x70, 0xE6, 0x85, 0xAA, 0x2C, 0xDC, 0x2B, 0xCB, 0x93, 0x61, 0x4E, 0x86, 0xD0, 0x19, 0xA5, 0x3A, 0x3D, 0xA5, 0xE3, 0xBA, 0xE5, 0xFB, 0xF7, 0xD3, 0x39, 0x65, 0x32, 0x16, 0xAE, 0x5B, 0x04, 0xB7, 0xA9, 0x8F, 0xB3, 0xD4, 0x47, 0x13, 0x94, 0x60, 0x65, 0x35, 0x11, 0xB8, 0x2B, 0x63, 0xC1, 0x68, 0x22, 0x70, 0x1F, 0xF2, 0x96, 0xCE, 0x27, 0x6E, 0xBB, 0xD7, 0x7D, 0x69, 0x32, 0xD5, 0x13, 0xE7, 0x82, 0x4C, 0x57, 0xB8, 0xDD, 0xC1, 0x08, 0x7B, 0xD2, 0x3C, 0xC3, 0x73, 0x91, 0x4B, 0xF2, 0x3B, 0x1E, 0x98, 0x48, 0xED, 0xDC, 0x15, 0xEF, 0xED, 0x2C, 0x1D, 0xCC, 0xED, 0x49, 0xD5, 0x2C, 0xE4, 0x92, 0xF7, 0xE7, 0x1F, 0xD6, 0x72, 0x0A, 0x72, 0x27, 0x93, 0xC7, 0x1B, 0x39, 0xBD, 0x94, 0x47, 0x20, 0x2F, 0x66, 0xF2, 0xD1, 0x46, 0x1E, 0x81, 0x7C, 0x95, 0x6D, 0x93, 0x8D, 0x45, 0x98, 0x63, 0x19, 0x08, 0xE2, 0xFA, 0xD4, 0x1B, 0xC7, 0xC0, 0xBE, 0x09, 0xE9, 0x7B, 0x12, 0x61, 0xF5, 0xBA, 0x3F, 0x6F, 0xF9, 0x39, 0x3D, 0xDD, 0x0C, 0x7A, 0x7E, 0x87, 0x98, 0x24, 0x81, 0x46, 0xE4, 0xB0, 0xDF, 0x79, 0xE1, 0xC6, 0xA9, 0xD1, 0xF0, 0x66, 0x23, 0x38, 0x76, 0xC1, 0x64, 0x78, 0xC5, 0x84, 0x3D, 0xD4, 0x35, 0x38, 0xF3, 0xF5, 0xD4, 0x12, 0xDD, 0x6C, 0xA9, 0x6E, 0x51, 0x30, 0x45, 0x57, 0x4C, 0x47, 0x60, 0x7A, 0x90, 0x19, 0xF2, 0x9B, 0x0D, 0x57, 0xBB, 0x42, 0xCF, 0x2B, 0xC9, 0x01, 0x4D, 0x54, 0xB1, 0xE6, 0xF4, 0xA2, 0xAF, 0x67, 0x11, 0x86, 0x29, 0x47, 0xA9, 0x4A, 0x8E, 0x17, 0x16, 0x72, 0xCE, 0x70, 0x5D, 0x57, 0x9D, 0xA8, 0x5E, 0xF0, 0xA1, 0x5A, 0xEA, 0x8B, 0x08, 0x0D, 0x70, 0x24, 0xEA, 0xAB, 0xEC, 0xA4, 0x93, 0x50, 0x7A, 0xA2, 0xFE, 0x3E, 0x93, 0xD4, 0x75, 0xD8, 0x8F, 0x7A, 0x61, 0xD3, 0x84, 0x1E, 0xA4, 0x5D, 0xA7, 0xCE, 0x83, 0x01, 0xCA, 0x15, 0x2B, 0x95, 0x82, 0xB6, 0xF9, 0x63, 0x9B, 0x76, 0x1E, 0x54, 0x29, 0x87, 0xF3, 0x7E, 0xA3, 0x96, 0x69, 0x6D, 0x6F, 0x17, 0x34, 0xA7, 0x54, 0xCC, 0x67, 0x6E, 0xD7, 0xEE, 0x96, 0x1F, 0x96, 0x05, 0xCA, 0x54, 0xED, 0x89, 0xFA, 0x02, 0x25, 0x24, 0x46, 0xEA, 0xBD, 0xBE, 0xF0, 0xC7, 0x3C, 0x7B, 0xAB, 0xD8, 0x05, 0x8C, 0x84, 0x6A, 0x57, 0x75, 0x78, 0xE2, 0x56, 0xB2, 0x0F, 0x40, 0xF4, 0x65, 0x01, 0x67, 0x29, 0x00, 0x2B, 0x15, 0x4B, 0x7D, 0x01, 0x2D, 0xA0, 0x50, 0xFA, 0xB6, 0xE9, 0x2C, 0x0B, 0x8C, 0xC2, 0x77, 0x46, 0x7D, 0xA1, 0xFA, 0xEC, 0xB1, 0xA8, 0xDB, 0x4B, 0xF8, 0x97, 0x5F, 0x2E, 0x55, 0xED, 0x33, 0x9C, 0xE4, 0xF4, 0x67, 0x4F, 0xFA, 0x7A, 0x41, 0x57, 0x15, 0xFE, 0x51, 0x61, 0x71, 0xF4, 0x82, 0xE4, 0x63, 0xAC, 0xF6, 0x86, 0xC0, 0x89, 0x0F, 0x3B, 0x6B, 0xD7, 0x5A, 0xED, 0xD9, 0xCD, 0xEE, 0xBD, 0xDC, 0x65, 0xF1, 0xBC, 0x83, 0xD8, 0xE5, 0x1E, 0x5B, 0x64, 0x07, 0x47, 0x5D, 0xE5, 0x78, 0x75, 0x7B, 0xC1, 0x59, 0x20, 0xCC, 0x17, 0x48, 0xBE, 0x80, 0xC2, 0x73, 0x6A, 0x66, 0x6D, 0xCB, 0x76, 0xAA, 0xA5, 0xC2, 0xD6, 0xB6, 0x59, 0x2E, 0xD7, 0x4A, 0x95, 0x72, 0xBE, 0x70, 0x41, 0x69, 0x5C, 0x77, 0xCA, 0xCB, 0x94, 0x1E, 0xCF, 0xFD, 0xDC, 0x54, 0x2D, 0x7F, 0x33, 0xD9, 0x08, 0x8A, 0xA4, 0x30, 0xC8, 0xA8, 0x45, 0x5F, 0xB1, 0xE5, 0x67, 0x98, 0xE7, 0x16, 0x8C, 0x0A, 0xA2, 0xD0, 0xFE, 0x14, 0x2E, 0x50, 0xA8, 0x7B, 0x90, 0xA8, 0x9D, 0x2F, 0xC3, 0xD7, 0x90, 0x98, 0x27, 0x9E, 0xE6, 0xE3, 0x21, 0xE6, 0xD7, 0x2F, 0x6E, 0x30, 0xFA, 0xFC, 0x8B, 0x2A, 0x9D, 0xB3, 0x60, 0x64, 0x8D, 0xC4, 0x23, 0xD8, 0xDC, 0xEE, 0x5E, 0xEB, 0x02, 0xF5, 0xE6, 0xFB, 0xE4, 0xF0, 0x88, 0xBD, 0x1A, 0xC7, 0xCF, 0x4F, 0xDF, 0x36, 0x83, 0x77, 0xA1, 0x28, 0xCE, 0x5A, 0xDE, 0xBB, 0xF2, 0xD9, 0xD8, 0xD9, 0xDA, 0x7E, 0x51, 0x2D, 0xB1, 0xE2, 0xD1, 0x7D, 0xF8, 0xD2, 0x8D, 0x54, 0x9D, 0xB9, 0x69, 0x8E, 0xF5, 0xC6, 0x97, 0x38, 0x52, 0xDF, 0x6B, 0xD7, 0x1E, 0xF5, 0xB1, 0x39, 0x82, 0x83, 0x8D, 0xCF, 0x53, 0xB7, 0xD9, 0xAB, 0x51, 0x52, 0x9F, 0x9F, 0xA6, 0x88, 0x48, 0x9C, 0x7E, 0x75, 0x8E, 0xBE, 0xF2, 0xD1, 0x79, 0x5E, 0x23, 0xD6, 0xC9, 0xC3, 0xED, 0x6A, 0xA5, 0x79, 0xD1, 0xB5, 0x79, 0x7F, 0x0B, 0x0D, 0x9E, 0x97, 0x9D, 0x76, 0x4F, 0x1E, 0xB5, 0xF6, 0xCE, 0xDF, 0x04, 0xC7, 0x6F, 0x2E, 0xD8, 0xE0, 0x82, 0x56, 0x44, 0x7C, 0xF2, 0x9C, 0x95, 0x4F, 0x87, 0xC7, 0x93, 0xC3, 0x87, 0x35, 0x34, 0x90, 0xFD, 0x27, 0xCE, 0x2B, 0x52, 0x1D, 0x91, 0x0B, 0xFA, 0xF5, 0x8F, 0xCE, 0xEF, 0xE2, 0xF5, 0x93, 0x11, 0x24, 0x28, 0xA2, 0x63, 0x7F, 0x18, 0x21, 0x9E, 0xF5, 0x39, 0x68, 0x84, 0x66, 0x56, 0x44, 0x06, 0xC2, 0x62, 0x94, 0x31, 0xCC, 0x01, 0xAF, 0xE5, 0x98, 0x4E, 0xD9, 0xDC, 0xB2, 0xC6, 0xB1, 0xBF, 0x9A, 0xBC, 0x31, 0x90, 0xD7, 0xDD, 0x22, 0xEE, 0xDB, 0x07, 0xEC, 0xF0, 0xDC, 0xEF, 0xB5, 0x8F, 0xAA, 0x61, 0x5B, 0xCE, 0x2B, 0xCF, 0xDF, 0xB0, 0x50, 0xBE, 0x0A, 0x2F, 0xDE, 0x8E, 0xB6, 0xDF, 0x76, 0x1D, 0x2F, 0x82, 0xA3, 0xE4, 0x19, 0x2A, 0xB5, 0x9B, 0xEF, 0xA6, 0x3C, 0x39, 0x3A, 0x2F, 0x8B, 0xA7, 0xB5, 0xAA, 0xDF, 0x3A, 0x7C, 0xD9, 0xBC, 0xB0, 0xDF, 0x3A, 0xBF, 0x16, 0xC8, 0x4F, 0xFC, 0x0A, 0x30, 0x12, 0x9B, 0xA9, 0x1B, 0xA3, 0x68, 0x8F, 0x7A, 0xF1, 0x9B, 0x60, 0xEE, 0xDB, 0xAC, 0xC4, 0x4E, 0xF6, 0x1D, 0x7E, 0x4C, 0x06, 0xEF, 0x5E, 0xEF, 0x9D, 0xD2, 0x56, 0x6B, 0x5E, 0xED, 0xF2, 0xA3, 0xEA, 0x1B, 0x3E, 0x6A, 0x3D, 0x41, 0x4F, 0x87, 0x56, 0xD2, 0x7E, 0x76, 0xD1, 0x9A, 0x3D, 0x6D, 0x8A, 0x61, 0x79, 0x66, 0xCF, 0x5A, 0x9D, 0x87, 0xFB, 0xF6, 0xD6, 0xE8, 0xB8, 0xF3, 0x6B, 0x51, 0x78, 0xBE, 0x42, 0xE3, 0xE3, 0x88, 0x4C, 0xB8, 0x99, 0x60, 0x69, 0x25, 0x0C, 0x7E, 0x0C, 0x50, 0xE7, 0x24, 0x4C, 0x3F, 0x2E, 0x9A, 0x35, 0xD3, 0xBE, 0xB6, 0x84, 0xB5, 0xEE, 0xCD, 0xAC, 0xF4, 0x07, 0xA0, 0x4F, 0x63, 0xD5, 0x98, 0x8D, 0x10, 0x12, 0x00, 0x00};
const char MAIN_page[] PROGMEM ={0x1F, 0x8B, 0x08, 0x08, 0xEF, 0xB2, 0xB5, 0x61, 0x04, 0x00, 0x32, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x00, 0x85, 0x52, 0x4D, 0x4B, 0xC4, 0x30, 0x10, 0xBD, 0x0B, 0xFE, 0x87, 0x90, 0xB3, 0xB5, 0x8A, 0x17, 0x91, 0xA6, 0x22, 0xB2, 0xB2, 0x82, 0xCA, 0x22, 0x2E, 0x78, 0x93, 0x69, 0x33, 0xB6, 0x81, 0x34, 0x89, 0xE9, 0xB4, 0xEB, 0xFE, 0x7B, 0x93, 0xD8, 0xFD, 0x12, 0xC5, 0x4B, 0x26, 0xF3, 0xF5, 0xDE, 0x9B, 0x4C, 0x8A, 0x96, 0x3A, 0xCD, 0x34, 0x98, 0x46, 0x70, 0x34, 0xBC, 0x3C, 0x3E, 0x2A, 0x5A, 0x04, 0x19, 0x6D, 0x87, 0x04, 0xAC, 0x6E, 0xC1, 0xF7, 0x48, 0x82, 0x2F, 0x5F, 0xEE, 0xB2, 0x4B, 0xBE, 0x8D, 0xB7, 0x44, 0x2E, 0xC3, 0x8F, 0x41, 0x8D, 0x82, 0xBF, 0x66, 0xCB, 0x9B, 0xEC, 0xD6, 0x76, 0x0E, 0x48, 0x55, 0x1A, 0x39, 0xAB, 0xAD, 0x21, 0x34, 0xA1, 0xE9, 0x7E, 0x26, 0x50, 0x36, 0xB8, 0x6B, 0x33, 0xD0, 0xA1, 0xE0, 0xA3, 0xC2, 0x95, 0xB3, 0x9E, 0xF6, 0x2A, 0x57, 0x4A, 0x52, 0x2B, 0x24, 0x8E, 0xAA, 0xC6, 0x2C, 0x39, 0x27, 0x4C, 0x19, 0x45, 0x0A, 0x74, 0xD6, 0xD7, 0xA0, 0x51, 0x9C, 0x9F, 0x9E, 0x25, 0x1C, 0x52, 0xA4, 0xB1, 0x7C, 0xB0, 0x8D, 0x32, 0x6C, 0x01, 0x0D, 0x16, 0x79, 0x8A, 0xC4, 0x54, 0xBE, 0x91, 0x5E, 0x59, 0xB9, 0x8E, 0xB6, 0xC6, 0x00, 0xEF, 0xD3, 0x50, 0x17, 0x53, 0xCB, 0x1C, 0x7D, 0x68, 0x09, 0x6E, 0x84, 0x82, 0x20, 0x37, 0x5D, 0x7C, 0x3A, 0x65, 0xB9, 0xEC, 0xD1, 0x47, 0x8D, 0x57, 0x01, 0x55, 0x4E, 0xB1, 0x42, 0x19, 0x37, 0x10, 0xA3, 0xB5, 0x0B, 0xD2, 0x09, 0x3F, 0x89, 0x4F, 0x63, 0x0C, 0xA1, 0x98, 0x33, 0xA7, 0xA1, 0xC6, 0xD6, 0x6A, 0x89, 0x5E, 0xF0, 0x59, 0xE4, 0x4B, 0xE9, 0x48, 0x14, 0x06, 0x9F, 0x70, 0x82, 0xF1, 0x07, 0x44, 0x0B, 0xE8, 0xFB, 0x95, 0xF5, 0xF2, 0x4F, 0x22, 0x37, 0x15, 0xEC, 0x93, 0xBD, 0xC5, 0xE0, 0xAF, 0x8C, 0x1B, 0xB8, 0x7F, 0x58, 0x8B, 0xB0, 0x38, 0x8F, 0xEF, 0x82, 0xE7, 0x73, 0xDB, 0x85, 0xBA, 0x03, 0xC6, 0x7E, 0xA8, 0x3A, 0x35, 0x0D, 0xB7, 0xF3, 0x46, 0xD0, 0x43, 0x70, 0xD3, 0xE3, 0x45, 0x60, 0x28, 0xF7, 0x15, 0xBB, 0xF2, 0xC9, 0x12, 0x5B, 0x23, 0x31, 0x60, 0x8F, 0xD8, 0x55, 0xE8, 0xAF, 0xD9, 0x21, 0xC9, 0x69, 0xFC, 0x60, 0xBC, 0x7C, 0xC6, 0x46, 0xF5, 0x41, 0xE9, 0x37, 0x80, 0xFB, 0xA9, 0x30, 0xDF, 0xAE, 0x22, 0xDF, 0xED, 0x2C, 0xDF, 0xAC, 0x31, 0x8F, 0x18, 0xE5, 0x17, 0x39, 0x3E, 0x77, 0xB1, 0xAB, 0x02, 0x00, 0x00};
const char MAIN_page12[] PROGMEM ={0x1F, 0x8B, 0x08, 0x08, 0x43, 0xA8, 0x8A, 0x61, 0x04, 0x00, 0x70, 0x61, 0x67, 0x65, 0x33, 0x2E, 0x68, 0x74, 0x6D, 0x6C, 0x00, 0x8D, 0x54, 0x5D, 0x6B, 0xDB, 0x30, 0x14, 0x7D, 0x1F, 0xEC, 0x3F, 0x78, 0x29, 0x2B, 0x0E, 0xC4, 0x4E, 0xD2, 0xAE, 0x74, 0xB3, 0xA3, 0x40, 0xB7, 0x96, 0xB5, 0xA3, 0xED, 0xA0, 0xCD, 0xC3, 0x60, 0x8C, 0x22, 0x5B, 0xD7, 0xB1, 0xA8, 0x2D, 0x79, 0xD2, 0xB5, 0x93, 0x34, 0xE4, 0xBF, 0x4F, 0x92, 0xF3, 0xD5, 0x65, 0x0F, 0xF3, 0x83, 0xE5, 0x7B, 0x74, 0xEF, 0xB9, 0xE7, 0x7E, 0xE0, 0xD1, 0x3B, 0x26, 0x53, 0x5C, 0x54, 0xE0, 0xE5, 0x58, 0x16, 0xE3, 0xB7, 0x6F, 0x46, 0xDB, 0x13, 0x28, 0xB3, 0x27, 0x72, 0x2C, 0x60, 0x7C, 0x23, 0x27, 0xDE, 0x9D, 0x44, 0x2E, 0x85, 0xC7, 0x00, 0x21, 0x45, 0xA9, 0x46, 0x7D, 0x77, 0x65, 0x7D, 0x4A, 0x40, 0xEA, 0x09, 0x5A, 0x02, 0x69, 0x38, 0xCC, 0x2A, 0xA9, 0xD0, 0x4B, 0xA5, 0x40, 0x10, 0x48, 0x3A, 0x33, 0xCE, 0x30, 0x27, 0x0C, 0x1A, 0x9E, 0x42, 0xE0, 0x8C, 0x9E, 0xC7, 0x05, 0x47, 0x4E, 0x8B, 0x40, 0xA7, 0xB4, 0x00, 0x32, 0xEC, 0xB8, 0x7C, 0x43, 0x4F, 0xE3, 0xC2, 0x98, 0x08, 0x73, 0x0C, 0x68, 0xC1, 0xA7, 0x22, 0x4A, 0xC1, 0x90, 0xA8, 0x38, 0x95, 0x85, 0x54, 0x51, 0x52, 0xD4, 0x10, 0x67, 0x86, 0x36, 0xD0, 0xFC, 0x05, 0xA2, 0x93, 0xF0, 0x4C, 0x41, 0xB9, 0x2F, 0xEC, 0x72, 0x2B, 0x2C, 0x1F, 0x5A, 0x46, 0x47, 0x37, 0x4E, 0xA9, 0x68, 0xA8, 0x5E, 0x06, 0xA5, 0x7C, 0x09, 0x6A, 0x0D, 0x2A, 0xD0, 0x50, 0x18, 0xB7, 0x48, 0x48, 0x01, 0x71, 0x30, 0x83, 0xE4, 0x99, 0xE3, 0x3F, 0x2E, 0x4A, 0x7D, 0x00, 0xAE, 0x8E, 0x18, 0x45, 0xFA, 0x84, 0x34, 0x29, 0x60, 0xE9, 0x84, 0x64, 0xB4, 0xE4, 0xC5, 0x22, 0xBA, 0x87, 0x99, 0x37, 0xE1, 0x25, 0x68, 0xEF, 0x41, 0x96, 0x54, 0xC4, 0x89, 0x54, 0xCC, 0x84, 0x1A, 0xD9, 0x05, 0xAD, 0x34, 0x44, 0x9B, 0x8F, 0xD8, 0x95, 0x1F, 0x0D, 0x07, 0x83, 0xF7, 0xF1, 0x61, 0x95, 0xBB, 0xD2, 0xC2, 0x8F, 0xA6, 0xB2, 0xFD, 0x6C, 0x1E, 0xB2, 0xDE, 0x2B, 0x33, 0x5F, 0xB6, 0x39, 0xA2, 0xD3, 0x6A, 0xEE, 0x69, 0x59, 0x70, 0xE6, 0x1D, 0x31, 0xC6, 0xE2, 0x8A, 0x32, 0xC6, 0xC5, 0x34, 0x1A, 0x9E, 0x55, 0xF3, 0xD7, 0x04, 0x2A, 0x12, 0x98, 0x07, 0x69, 0xCE, 0x0B, 0xE6, 0x43, 0x03, 0xA2, 0xBB, 0x4C, 0x68, 0xFA, 0x3C, 0x55, 0xB2, 0x16, 0x2C, 0x68, 0x1B, 0x7C, 0x94, 0xD1, 0xCC, 0x3C, 0x7F, 0xC7, 0xE5, 0xB2, 0x01, 0xF5, 0x9F, 0xDE, 0xF9, 0x72, 0xAD, 0x20, 0x40, 0x59, 0x45, 0x27, 0x83, 0x6A, 0x1E, 0x6F, 0x80, 0x44, 0x22, 0xCA, 0xB2, 0xC5, 0x0E, 0x8B, 0x3F, 0xA4, 0x1F, 0x7E, 0x1A, 0x9C, 0x9F, 0x9F, 0xAD, 0x67, 0x3F, 0xCB, 0x39, 0xC2, 0x6A, 0xD4, 0x77, 0x23, 0xB5, 0xB3, 0xED, 0x6F, 0xD6, 0x33, 0x91, 0x6C, 0x61, 0x4F, 0xC6, 0x1B, 0x7B, 0xB4, 0x3A, 0x38, 0x23, 0x3B, 0x55, 0x0E, 0x56, 0xE3, 0x11, 0xE6, 0x63, 0x3B, 0x24, 0xB3, 0xB6, 0xB9, 0x33, 0x2E, 0x52, 0xE4, 0x0D, 0xC7, 0x85, 0x03, 0xCC, 0x4B, 0x39, 0xDE, 0x6D, 0x48, 0x7F, 0xCD, 0x98, 0xA8, 0xDD, 0x5B, 0xA7, 0x8A, 0x57, 0x38, 0x6E, 0xA8, 0xF2, 0x2E, 0x1A, 0x6A, 0xF6, 0x51, 0x93, 0x9F, 0xBF, 0x62, 0x6B, 0x9A, 0x74, 0xF0, 0x88, 0xB4, 0xAC, 0x2C, 0xA0, 0x01, 0x6F, 0x6C, 0x55, 0xC6, 0xC5, 0xCF, 0x6A, 0x91, 0xDA, 0xED, 0xF4, 0xBB, 0xCB, 0x29, 0xE0, 0xA5, 0x51, 0xE5, 0x77, 0x57, 0xBD, 0xD3, 0xC1, 0x60, 0xD0, 0x8D, 0x37, 0x77, 0xDE, 0xF6, 0x66, 0x69, 0xB9, 0x28, 0x11, 0x66, 0xA1, 0x7E, 0xDC, 0xDD, 0x5E, 0x23, 0x56, 0x0F, 0xF0, 0xDB, 0xA4, 0x41, 0xBF, 0x1B, 0xD3, 0x50, 0x0A, 0x65, 0xAA, 0x5E, 0x68, 0x34, 0xC9, 0xD2, 0x9C, 0x8A, 0x29, 0x90, 0x3D, 0x7A, 0x9E, 0xF9, 0x98, 0x73, 0x1D, 0x3A, 0x9F, 0x47, 0xEB, 0x43, 0xC8, 0x87, 0xE3, 0x63, 0x87, 0xD9, 0x90, 0x5A, 0x13, 0x72, 0x62, 0xD2, 0xBA, 0x1C, 0xE0, 0x72, 0x5C, 0x1A, 0x27, 0xC3, 0x6C, 0x81, 0x84, 0xAC, 0x83, 0x75, 0x25, 0x85, 0x86, 0x89, 0x99, 0x90, 0xC3, 0xA7, 0xE4, 0xDB, 0xE3, 0xF7, 0xFB, 0xB0, 0xA2, 0x4A, 0x83, 0x9F, 0x74, 0xE3, 0x75, 0xDD, 0x61, 0x55, 0xEB, 0xDC, 0x9F, 0x86, 0x9B, 0x26, 0x76, 0xE3, 0x6D, 0x07, 0xDA, 0x2B, 0x68, 0x69, 0x33, 0x62, 0xFE, 0x2F, 0x75, 0x69, 0x86, 0x1C, 0x9A, 0x22, 0xAF, 0x0A, 0xB0, 0x9F, 0x9F, 0x17, 0x37, 0xCC, 0xEF, 0xEC, 0x26, 0xD4, 0x69, 0x7D, 0x73, 0x92, 0x85, 0xDC, 0xE4, 0x56, 0xF8, 0x20, 0x67, 0xFE, 0xB0, 0x05, 0x19, 0xC9, 0xD7, 0xE0, 0x17, 0x28, 0x0A, 0x7F, 0xD0, 0xA2, 0xE9, 0x2B, 0xD4, 0xFA, 0x32, 0x63, 0x0B, 0x50, 0xD7, 0x93, 0xBB, 0x5B, 0x02, 0x71, 0xBA, 0x67, 0xED, 0x44, 0xAE, 0x56, 0xB6, 0x89, 0x15, 0x08, 0xBF, 0xF3, 0xF5, 0x6A, 0xD2, 0xE9, 0x75, 0x6C, 0xAB, 0x9E, 0xAC, 0x8E, 0x4E, 0x0F, 0x55, 0x0D, 0xB6, 0xC7, 0x1A, 0x04, 0x33, 0x13, 0x8A, 0x47, 0xFD, 0x76, 0xD8, 0x6E, 0x15, 0x36, 0x4B, 0xD6, 0x77, 0x3F, 0xC7, 0x3F, 0x28, 0xCF, 0x93, 0xDF, 0x34, 0x05, 0x00, 0x00};                     
void read_data1() { 
int myecg = analogRead(SENSOR);  
MQ135 gasSensor = MQ135(15);
float temperature =  dht.readTemperature();/* Get temperature value */
    float air_quality = gasSensor.getPPM();
    readings["sensor1"] = String(myecg);
    readings["sensor2"] = String(air_quality);
    readings["sensor3"] = String(temperature);
    String jsonString = JSON.stringify(readings);                 
    String data = "{\"Activity\":\""+ jsonString +"\"}";
    server.send(200, "text/plane", jsonString.c_str());      
} 
void read_data() {
  int state = digitalRead(sensor_pin); 
  delay(500);                        
  Serial.print(state);
    if(state == HIGH){ 
    Message = "Motion Detected";
    String data = "{\"Activity\":\""+ String(Message) +"\"}";
    server.send(200, "text/plane", data);                
    Serial.println("Motion detected!");
    }
}   
void handleRoot1() {
  myservo.write(90);  
  Serial.print("Servo Angle:");
  Serial.println(90);
 server.sendHeader("content-encoding", "gzip");
 server.send(200, "text/html", MAIN_page1, sizeof(MAIN_page1)); 
}
void motion() {
 server.sendHeader("content-encoding", "gzip");
 server.send(200,"text/html",MAIN_page12,sizeof(MAIN_page12)); 
}
void handleRoot() { 
 server.sendHeader("content-encoding", "gzip");
 server.send(200, "text/html", MAIN_page, sizeof(MAIN_page)); 
}
void setup() {
  Serial.begin(115200);
  delay(500);
  myservo.attach(ServoPort); 
  pinMode(SENSOR, INPUT);
  pinMode(sensor_pin, INPUT);
 WiFi.begin(ssid, password);
  Serial.print("Connect your wifi laptop/mobile phone to this NodeMCU Access Point : ");
  Serial.println(ssid);
  Serial.println("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println(".");
  }
  Serial.println(WiFi.localIP());
  myservo.write(0);
  server.on("/",handleRoot);
  server.on("/read_data1", read_data1);
  server.on("/Home",handleRoot1);
  server.on("/motion",motion);
  server.on("/read_data", read_data);
   server.begin();  
  Serial.println("HTTP server started");
}
void loop() {
server.handleClient();
}
